@model IEnumerable<Carpet.Web.ViewModels.Administration.Orders.AllWaitingPickUpConfirmation.OrderAllWaitingPickUpConfirmationViewModel>

@{
    ViewData["Title"] = "AllWaitingPickUpConfirmation";
    var count = 1;
    var date = Model.Count() > 0 ? "за доставка за дата: " + Model.First().PickUpFor.ToString("dd.MM.yyyy") + " г." : string.Empty;
}

<h1 class="title text-center">СПИСЪК С ПОРЪЧКИ</h1>
<p class="intro text-center" style="margin-top: 10px;"></p>

<h4 class="title text-center">Чакащи потвърждение от клиента @date</h4>
<hr />
<table id="ordersAllCreated" class="display" style="width:100%">
    <thead style="font-size:14px">
        <tr class="text-center">
            <th>#</th>
            <th>
                @Html.DisplayNameFor(model => model.Customer.PhoneNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FullName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Customer.PickUpAddress)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsExpress)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ItemQuantitySetByUser)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.HoursRange)
            </th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr style="font-size:12px">
            <td>@(count++)</td>
            <td>
                @Html.DisplayFor(modelItem => item.Customer.PhoneNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FullName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Customer.PickUpAddress)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsExpress)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ItemQuantitySetByUser)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.HoursRange)
            </td>
            <td>
                @Html.ActionLink("Confirm", GlobalConstants.ActionPickUpRangeHoursName, new { id = item.Id }, new { @class = "btn btn-sm btn-outline-primary", @style = "margin:1px; width:100%;" })
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "btn btn-sm btn-outline-primary", @style = "margin:1px; width:45%;" })

                @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "btn btn-sm btn-outline-danger", @style = "margin:1px; width:45%;" })
            </td>
        </tr>
        }
    </tbody>
</table>
