@using Carpet.Common.Constants
@model IEnumerable<Carpet.Web.ViewModels.Administration.Customers.EmployeeIndexViewModel>

@{
    ViewData["Title"] = "Index";
    var count = 1;
}

<h1 class="title text-center" style="margin-top: 35px;">СПИСЪК НА СЛУЖУТЕЛИ</h1>

<div class="d-flex flex-row justify-content-end" style="width:100%; margin-top: 35px;">

    <a class="btn btn-primary" style="width:180px; font-size:14px;"
       asp-area="@GlobalConstants.AreaAdministrationName"
       asp-controller="@GlobalConstants.ContollerEmployeesName"
       asp-action="@GlobalConstants.ActionAllUsersName">Избери от потребители</a>



</div>
<p class="intro text-center" style="margin-top: 10px;"></p>
@if (this.User.IsInRole(GlobalConstants.AdministratorRoleName))
{

    <table id="employees" class="display" style="width:100%">
        <thead>
            <tr class="text-center" style="font-size:13px">

                <th>
                    #
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LastName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PhoneNumber)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.RoleName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CreatedOn)
                </th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var employee in Model)
            {
            <tr style="font-size:13px">
                <td>
                    @(count++)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => employee.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => employee.LastName)
                </td>
                <td class="text-center">
                    @Html.DisplayFor(modelItem => employee.PhoneNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => employee.RoleName)
                </td>
                <td class="text-center">
                    @Html.DisplayFor(modelItem => employee.CreatedOn)
                </td>
                <td class="text-center">
                    
                    <a class="btn btn-outline-primary btn-sm"
                       asp-area="@GlobalConstants.AreaAdministrationName"
                       asp-controller="@GlobalConstants.ContollerGarageName"
                       asp-action="@GlobalConstants.ActionAddName"
                       asp-route-id="@employee.Id">Add / Remove Vehicle</a>
                </td>
                <td class="text-center">
                    @if (employee.RoleName != GlobalConstants.AdministratorRoleName)
                    {
                        @Html.ActionLink("Edit", "Edit", new { id = employee.Id }, new { @class = "btn btn-sm btn-outline-primary" })
                        <span> I </span>
                        @Html.ActionLink("Delete", "Delete", new { id = employee.Id }, new { @class = "btn btn-sm btn-outline-danger" })
                    }
                    else
                    {
                        <span>No Actions</span>
                    }
                </td>
            </tr>
            }
        </tbody>
    </table>
}
else if (this.User.IsInRole(GlobalConstants.OperatorRoleName))
{

    <table id="employees" class="display" style="width:100%">
        <thead>
            <tr class="text-center" style="font-size:13px">

                <th>
                    #
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LastName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PhoneNumber)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.RoleName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CreatedOn)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var employee in Model)
            {
                <tr style="font-size:13px">
                    <td>
                        @(count++)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => employee.FirstName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => employee.LastName)
                    </td>
                    <td class="text-center">
                        @Html.DisplayFor(modelItem => employee.PhoneNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => employee.RoleName)
                    </td>
                    <td class="text-center">
                        @Html.DisplayFor(modelItem => employee.CreatedOn)
                    </td>
                    <td class="text-center">
                        <a class="btn btn-outline-primary btn-sm"
                           asp-area="@GlobalConstants.AreaAdministrationName"
                           asp-controller="@GlobalConstants.ContollerGarageName"
                           asp-action="@GlobalConstants.ActionAddName"
                           asp-route-id="@employee.Id">Add / Remove Vehicle</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}